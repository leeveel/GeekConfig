// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168
#pragma warning disable CS1591 // document public APIs

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace Formatters.Data.Containers
{
    public sealed class t_globalBeanDeserializeProxyDataFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Data.Containers.t_globalBeanDeserializeProxyData>
    {
        // t_id
        private static global::System.ReadOnlySpan<byte> GetSpan_t_id() => new byte[1 + 4] { 164, 116, 95, 105, 100 };
        // t_int_param
        private static global::System.ReadOnlySpan<byte> GetSpan_t_int_param() => new byte[1 + 11] { 171, 116, 95, 105, 110, 116, 95, 112, 97, 114, 97, 109 };
        // t_string_param
        private static global::System.ReadOnlySpan<byte> GetSpan_t_string_param() => new byte[1 + 14] { 174, 116, 95, 115, 116, 114, 105, 110, 103, 95, 112, 97, 114, 97, 109 };
        // t_array_param
        private static global::System.ReadOnlySpan<byte> GetSpan_t_array_param() => new byte[1 + 13] { 173, 116, 95, 97, 114, 114, 97, 121, 95, 112, 97, 114, 97, 109 };
        // t_enum_Param
        private static global::System.ReadOnlySpan<byte> GetSpan_t_enum_Param() => new byte[1 + 12] { 172, 116, 95, 101, 110, 117, 109, 95, 80, 97, 114, 97, 109 };
        // t_enumArray_Param
        private static global::System.ReadOnlySpan<byte> GetSpan_t_enumArray_Param() => new byte[1 + 17] { 177, 116, 95, 101, 110, 117, 109, 65, 114, 114, 97, 121, 95, 80, 97, 114, 97, 109 };
        // t_testclass_Param
        private static global::System.ReadOnlySpan<byte> GetSpan_t_testclass_Param() => new byte[1 + 17] { 177, 116, 95, 116, 101, 115, 116, 99, 108, 97, 115, 115, 95, 80, 97, 114, 97, 109 };

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::Data.Containers.t_globalBeanDeserializeProxyData value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value is null)
            {
                writer.WriteNil();
                return;
            }

            var formatterResolver = options.Resolver;
            writer.WriteMapHeader(7);
            writer.WriteRaw(GetSpan_t_id());
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<int>>(formatterResolver).Serialize(ref writer, value.t_id, options);
            writer.WriteRaw(GetSpan_t_int_param());
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<int>>(formatterResolver).Serialize(ref writer, value.t_int_param, options);
            writer.WriteRaw(GetSpan_t_string_param());
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<string>>(formatterResolver).Serialize(ref writer, value.t_string_param, options);
            writer.WriteRaw(GetSpan_t_array_param());
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<global::System.Collections.Generic.List<int>>>(formatterResolver).Serialize(ref writer, value.t_array_param, options);
            writer.WriteRaw(GetSpan_t_enum_Param());
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<global::Data.SelfDefineType.SkillTarget>>(formatterResolver).Serialize(ref writer, value.t_enum_Param, options);
            writer.WriteRaw(GetSpan_t_enumArray_Param());
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<global::System.Collections.Generic.List<global::Data.SelfDefineType.SkillTarget>>>(formatterResolver).Serialize(ref writer, value.t_enumArray_Param, options);
            writer.WriteRaw(GetSpan_t_testclass_Param());
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<global::Data.SelfDefineType.TestClass>>(formatterResolver).Serialize(ref writer, value.t_testclass_Param, options);
        }

        public global::Data.Containers.t_globalBeanDeserializeProxyData Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            var formatterResolver = options.Resolver;
            var length = reader.ReadMapHeader();
            var ____result = new global::Data.Containers.t_globalBeanDeserializeProxyData();

            for (int i = 0; i < length; i++)
            {
                var stringKey = global::MessagePack.Internal.CodeGenHelpers.ReadStringSpan(ref reader);
                switch (stringKey.Length)
                {
                    default:
                    FAIL:
                      reader.Skip();
                      continue;
                    case 4:
                        if (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey) != 1684627316UL) { goto FAIL; }

                        ____result.t_id = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<int>>(formatterResolver).Deserialize(ref reader, options);
                        continue;
                    case 11:
                        if (!global::System.MemoryExtensions.SequenceEqual(stringKey, GetSpan_t_int_param().Slice(1))) { goto FAIL; }

                        ____result.t_int_param = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<int>>(formatterResolver).Deserialize(ref reader, options);
                        continue;
                    case 14:
                        if (!global::System.MemoryExtensions.SequenceEqual(stringKey, GetSpan_t_string_param().Slice(1))) { goto FAIL; }

                        ____result.t_string_param = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<string>>(formatterResolver).Deserialize(ref reader, options);
                        continue;
                    case 13:
                        if (!global::System.MemoryExtensions.SequenceEqual(stringKey, GetSpan_t_array_param().Slice(1))) { goto FAIL; }

                        ____result.t_array_param = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<global::System.Collections.Generic.List<int>>>(formatterResolver).Deserialize(ref reader, options);
                        continue;
                    case 12:
                        if (!global::System.MemoryExtensions.SequenceEqual(stringKey, GetSpan_t_enum_Param().Slice(1))) { goto FAIL; }

                        ____result.t_enum_Param = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<global::Data.SelfDefineType.SkillTarget>>(formatterResolver).Deserialize(ref reader, options);
                        continue;
                    case 17:
                        switch (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey))
                        {
                            default: goto FAIL;
                            case 8232981944940715892UL:
                                if (!global::System.MemoryExtensions.SequenceEqual(stringKey, GetSpan_t_enumArray_Param().Slice(1 + 8))) { goto FAIL; }

                                ____result.t_enumArray_Param = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<global::System.Collections.Generic.List<global::Data.SelfDefineType.SkillTarget>>>(formatterResolver).Deserialize(ref reader, options);
                                continue;

                            case 7810214217762758516UL:
                                if (!global::System.MemoryExtensions.SequenceEqual(stringKey, GetSpan_t_testclass_Param().Slice(1 + 8))) { goto FAIL; }

                                ____result.t_testclass_Param = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<global::Data.SelfDefineType.TestClass>>(formatterResolver).Deserialize(ref reader, options);
                                continue;

                        }

                }
            }

            reader.Depth--;
            return ____result;
        }
    }

}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name
